Slim framework : permet de faire les requetes http 

propel : l'orm

Todo :
Refaire le script de creation de la DB et rentrer des données de test

5 Faire la recherche
5.1 faire l'autocompletion de la recherche 

10 Regarder comment se passe l'intégration d'un module Paypal ? @Bob ?
0 integrer au routeur la category   > done
1.2 faire une page 404 > done
1 Repasser une couche de validation sur tous les formulaires (coté client + coté serveur) > @bob
    - Controler les champs via javacript
2 faire bdd + test > prochaine cours


Bugs connu :

    > Responsive :
        > Cart / miniCart
        > Certains boutons > login 
        > signup
        > home
        
        > police qui se diminue par pour free shipping etc


Modules :

La page d’accueil
– La gestion du compte client (client.php)
– Le catalogue (catalog.php + category)
– La recherche (sur la page d'accueil le champ dans la banniere)
– Le panier (miniCart + cart)
- Le paiement (normal -> faire la vue ou on ajoute l'adresse etc + voir pour paypal plus tard)


Architecture applicative :

ActionController ? Request / Response ? 

Front Controller : Notre router -> toutes les requetes vont y passer 
[---> HomeController : home 
|---> AuthController : Connection / Deco / inscription
|---> CatalogController : Pour toute la boutique / Catalog + Cart 
|---> ClientController : Client 
|---> PaiementController : Pour toute la partie paiement ou on aura le paiement paypal aussi / checkout ? Transaction ?

---
Routes :

/ : home
/404 : 404

/auth/login
/auth/logout
/auth/signup

/shop/animals
/shop/plushes
/shop/candyandpastry
/shop/papershop
/shop/clothes

/shop/cart
/shop/checkout
/shop/search (juste en call ajax --> pas une vrai route visible ou on fait une vrai page ?

/account/{idClient}



$app->get('/', 'App\Controllers\HomeController:home');
$app->get('/404', 'App\Controllers\HomeController:notFound');
$app->get('/account', 'App\Controllers\AccountController:account');

$app->group('/auth', function() use ($container) {
    $this->get('/login', 'App\Controllers\AuthController:login');
    $this->get('/logout', 'App\Controllers\AuthController:logout');
    $this->get('/signup', 'App\Controllers\AuthController:signup');
});

$app->group('/shop', function() use ($container) {
    $this->get('/cart', 'App\Controllers\ShopController:cart');
    $this->get('/checkout', 'App\Controllers\ShopController:checkout');
    $this->get('/{category}', 'App\Controllers\ShopController:shop');

});
    
    
https://met02-karakayn.c9users.io/phpmyadmin

TODO :
Faire en sorte que le signup marche (prise en compte du birthdate + reajout de la validation) 
Ajout de validation js entre les deux password pour qu'ils correspondent.OK
faire en sorte que la connexion marche ok

ajouter un lien sur chaque image : pour emmener vers un item ou une category precise

ajouter les models/entity pour chaque table

faire la page de paiement 

faire la recherche

faire la query pour le catalogue ok

faire la panier avec les sessions phpay ok

Mini bug a corriger si on a le temps :

Bug 2 : quand je me login ca reload pas la page du coup on voit pas tout de suite qu'on est co
Bug 3 : Mettre des trucs qui cut les longs text
Bug 4 : glitch quand add du html via le js (pour le mini cart -> a fix + fix le prix pas bien update decoulant du premier glitch)

Features manquantes : sur la page d'inscription de prendre en compte les adresses etc... join + doctrine class a créer + link avec bdd
